<?php

class msInformUserSendProcessor extends modProcessor {
    public $classKey = 'msInformUserMailing';
    /** @var msInformUser $msInformUser */
    protected $msInformUser;


    /**
     * @return bool
     */
    public function initialize()
    {
        $this->msInformUser = $this->modx->getService('msInformUser');
        return parent::initialize(); // TODO: Change the autogenerated stub
    }


    /**
     * @return array|mixed|string
     */
    public function process() {
        $id = $this->getProperty('id');
        if (!$email = $this->getProperty('email')) {
            return $this->failure($this->modx->lexicon('msinformuser_err_not_email'));
        }

        $product = $this->msInformUser->getProduct($id);
        $user = $this->msInformUser->getUser(['email' => $email]);
        $scriptProperties = array_merge($user, $product);
        $data = [];

        $q = $this->modx->newQuery($this->classKey, ['index' => 1]);
        $tmp = $this->modx->getIterator($this->classKey, $q);
        $tmp->rewind();
        if ($tmp->valid()) {
            foreach ($tmp as $k => $v) {
                $data = $v->toArray();
            }
        }

        if (!empty($data['template'])) {
            if (!$chunk = $this->msInformUser->getNameChunk($data['template'])) {
                return $this->failure($this->modx->lexicon('msinformuser_err_no_template'));
            }
            if (!$data['body'] = $this->msInformUser->getChunk($chunk, $scriptProperties)) {
                return $this->failure($this->modx->lexicon('msinformuser_err_no_template'));
            }
        } else {
            return $this->failure($this->modx->lexicon('msinformuser_err_template_send'));
        }
        $data['to'] = $email;
        $data['attachment'] = MODX_BASE_PATH . $data['attachment'];

        $result = $this->msInformUser->sendEmail($data);

        if (!isset($result['result'])) {
            return $this->success($this->modx->lexicon('msinformuser_send_success'));
        } else {
            return $this->failure($result['messages']);
        }
    }
}
return 'msInformUserSendProcessor';